#!/bin/bash
SESSION_NAME="dream_mobile_base"
# heredoc: a way to define a multiline string. Treated as if a separate file
# Python also has this multiline docstring

usage(){
    cat << EOF
This is the main script that builds the workspacem and launches all necessary nodes on Rpi. 
    - b: build catkin workspace. If it fails, then the script will exit
    - l : launch all nodes
EOF
}

DO_CATKIN_BUILD=false
LAUNCH_ALL=false

# l means no input value. have to store option there. otherwise, do l: and provide an input value
# \? is to escape ?. ? is a special getopts character
# getopts does not shift options for you. So you might want to shift by yourself
# variable name OPTION should match with the getopts arg
while getopts "lb" OPTION; do
    case "${OPTION}" in
        b)
            DO_CATKIN_BUILD=true
            echo "Doing catkin build"
            ;;
        l)
            LAUNCH_ALL=true
            echo "LAUNCHING ALL NODES"
            ;;
        \?)
            echo "Invalid Option: -${OPTION}"
            usage
            exit 1
            ;;
    esac
done 

# do catkin build
if [[ $DO_CATKIN_BUILD == true ]]; then
    # WORKDIRECTORY is defined in the dockerfile
    cd ${WORKDIRECTORY} && catkin build
    if [[ $? -ne 0 ]]; then
        echo "catkin build failed"
        exit 1
    fi

    git config --global --add safe.directory ${WORKDIRECTORY}
    git config --global --add safe.directory ${WORKDIRECTORY}/src/SimpleRoboticsPythonUtils
    cd ${WORKDIRECTORY}/src && git submodule update --init --recursive
    cd ${WORKDIRECTORY}/src/SimpleRoboticsPythonUtils && pip3 install -e .
fi



# Ternary in bash could be tricky. I'm not using that.
if [[ $LAUNCH_ALL == true ]]; then 
    SEND_KEY="C-m"
else
    SEND_KEY=""
fi

byobu new-session -d -s $SESSION_NAME
# Byobu window processes are children of the tmux server process.
# By default, there's a tab called bash

# Rename the window to "drivers".
byobu send-keys -t $SESSION_NAME "rosrun dream_mobile_platform camera_service.bash" ${SEND_KEY}
byobu rename-window -t $SESSION_NAME "camera_service"
# we need -E to preserve the user's environment, otherwise sudo will have trouble loading the correct
# PYTHON_PATH, since our user is in the SUDO group and is password less, but it's not sudo anymore
byobu new-window -t $SESSION_NAME -n "low_level_drivers" 
byobu send-keys -t $SESSION_NAME:"low_level_drivers" "sudo pigpiod && sudo -E /bin/bash -c 'source $WORKDIRECTORY/devel/setup.bash;roslaunch dream_mobile_platform low_level_drivers.launch '" ${SEND_KEY}

# creating a new pane, which DOES NOT have a name in byobu
byobu split-window -v -t $SESSION_NAME:"low_level_drivers"
byobu send-keys -t $SESSION_NAME:"low_level_drivers".1 "sudo_ros_preserve_env rosrun dream_mobile_platform motor_controller.py ${SEND_KEY}"

# Attach to the session.
byobu attach -t $SESSION_NAME
