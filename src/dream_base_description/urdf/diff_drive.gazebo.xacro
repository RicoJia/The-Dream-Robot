<?xml version="1.0"?>
<robot name="dream_gazebo_diff_drive" xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- Notes: load urdf, then load diff params -->
    <xacro:include filename="$(find dream_base_description)/urdf/diff_drive.urdf.xacro" />
    <xacro:property name="diff_params" value="${load_yaml('$(find dream_base_description)/config/diff_params.yaml')}" />`

    <gazebo>
        <!-- Notes: use params loaded from yaml -->
        <plugin name="dream_gazebo_diff_drive_plugin" filename="libdream_gazebo_diff_drive_plugin.so">
            <left_wheel_joint>left_wheel_axle</left_wheel_joint>
            <right_wheel_joint>right_wheel_axle</right_wheel_joint>
            <wheel_radius>${diff_params['wheel_radius']}</wheel_radius>
            <commanded_wheel_vel_topic>${diff_params['commanded_wheel_vel_topic']}</commanded_wheel_vel_topic>
        </plugin>
    </gazebo>

    <gazebo reference="base_link">
        <material>Gazebo/Purple</material>

    </gazebo>

    <gazebo reference="chassis">
        <material>Gazebo/Purple</material>
    </gazebo>

    <gazebo reference="laser_scan">
        <material>Gazebo/Yellow</material>
    </gazebo>

    <gazebo>
        <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
            <alwaysOn>true</alwaysOn>
            <bodyName>base_footprint</bodyName>
            <topicName>imu_data</topicName>
            <serviceName>imu_service</serviceName>
            <gaussianNoise>0.0</gaussianNoise>
            <updateRate>30.0</updateRate>
        </plugin>
    </gazebo>


    <gazebo reference="right_wheel">
        <material>Gazebo/Red</material>
        <mu1>1000</mu1>
        <mu2>1000</mu2>
                <minDepth>0.001</minDepth>
                <fdir1>1 0 0 </fdir1>
        <maxVel>0.1</maxVel>
        <kp>500000</kp>
        <kd>10</kd>
    </gazebo>

    <gazebo reference="left_wheel">
        <material>Gazebo/Red</material>
        <mu1>1000</mu1>
        <mu2>1000</mu2>
            <minDepth>0.001</minDepth>
            <fdir1>1 0 0 </fdir1>
        <maxVel>0.1</maxVel>
        <kp>500000</kp>
        <kd>10</kd>
    </gazebo>

    <gazebo reference="ball_caster">
        <material>Gazebo/Red</material>
        <mu1>0.0001</mu1>
        <mu2>0.0001</mu2>
            <minDepth>0.001</minDepth>
            <fdir1>1 0 0 </fdir1>
            <maxVel>1.0</maxVel>
        <kp>1000000</kp>
        <kd>100</kd>
    </gazebo>

    <!-- in URDF, the link is scan -->
    <gazebo reference="scan">
        <material>Gazebo/FlatBlack</material>
        <!-- Choosing non-GPU version of the laser scanner -->
        <sensor type="ray" name="head_hokuyo_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>5</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <resolution>1</resolution>
                        <min_angle>0.0</min_angle>
                        <max_angle>6.28319</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.150</min>
                    <max>6.0</max>
                    <resolution>0.005</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.03</stddev>
                </noise>
            </ray>
            <!-- plugin that converts gazebo sensor to ros topics. -->
            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
                <topicName>/dream/scan</topicName>
                <frameName>scan</frameName>
            </plugin>
        </sensor>
    </gazebo>


</robot>
